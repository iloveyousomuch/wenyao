//
//  Prefix header
//
//  The contents of this file are implicitly included at the beginning of every source file.
//

#import <Availability.h>

#ifndef __IPHONE_3_0
#warning "This project uses features only available in iOS SDK 3.0 and later."
#endif

#ifdef __OBJC__
    #import <UIKit/UIKit.h>
    #import <Foundation/Foundation.h>
    #import "ZBarSDK.h"
    #import "MobClick.h"
#endif



//#ifdef DEBUG_MODE
//#define DLog( s, ... ) NSLog( @"<%p %@:(%d)> %@", self, [[NSString stringWithUTF8String:__FILE__] lastPathComponent], __LINE__, [NSString stringWithFormat:(s), ##__VA_ARGS__] )
//#else
//#define DLog( s, ... )
//#endif
//
//
//
//
//
//
//
//
//#ifdef DEBUG
//#  define LOG(fmt, ...) do {                                            \
//NSString* file = [[NSString alloc] initWithFormat:@"%s", __FILE__]; \
//NSLog((@"%@(%d) " fmt), [file lastPathComponent], __LINE__, ##__VA_ARGS__); \
//[file release];                                                 \
//} while(0)
//#  define LOG_METHOD NSLog(@"%s", __func__)
//#  define LOG_CMETHOD NSLog(@"%@/%@", NSStringFromClass([self class]), NSStringFromSelector(_cmd))
//#  define COUNT(p) NSLog(@"%s(%d): count = %d\n", __func__, __LINE__, [p retainCount]);
//#  define LOG_TRACE(x) do {printf x; putchar('\n'); fflush(stdout);} while (0)
//#else
//#  define LOG(...)
//#  define LOG_METHOD
//#  define LOG_CMETHOD
//#  define COUNT(p)
//#  define LOG_TRACE(x)
//#endif



